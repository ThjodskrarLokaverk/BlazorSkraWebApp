@page "/CreateNotification"
@using BlazorSkraApp1.Data
@using BlazorSkraApp1.Services
@inject IOptionsQuestionAssignmnentsService oqaservice
@inject IQuestionsFormAssignmentService qfaservice
@inject IQuestionsService qservice
@inject IOptionsService opservice
@inject ICategoriesService catservice
@inject IFormsInfoService fiservice
@inject IQuestionTypesService qtservice
@inject ICategoriesAssignmentsService qasservice
@inject IJSRuntime jsRuntime

@if (questionsList == null){}
else
{
    <h4>Tilkynningin þín:</h4> <br>
    <p>Vinsamlegast ekki yfirgefa þessa síðu fyrr en þú hefur klárað að fylla út tilkynninguna</p> <br>
    @foreach(var question in questionsList)
    {
        <div class="card">
            <div class="card-body">
            <h5 class="card-title">@question.Questions.QuestionName</h5>
            @if(@question.Questions.QuestionTypes.QuestionTypeName == "Radio")
            {
                @foreach(var option in optionsList.Where(option => option.QuestionOrderNum == question.QuestionOrderNum))
                {
                    <input type="radio" name="@option.Options.OptionName" value="@option.Options.OptionName">
                    <label for="@option.Options.OptionName"> @option.Options.OptionName</label><br>
                }
            }
            else if(@question.Questions.QuestionTypes.QuestionTypeName == "TextShort")
            {
                    <textarea placeholder="Skrifið hér..." rows="1" cols="60"/> <br>
            }
            else if(@question.Questions.QuestionTypes.QuestionTypeName == "TextLong")
            {
                    <textarea placeholder="Skrifið hér..." rows="5" cols="100"/> <br>
            }
            else if(@question.Questions.QuestionTypes.QuestionTypeName == "Multiple")
            {
                @foreach(var option in optionsList.Where(option => option.QuestionOrderNum == question.QuestionOrderNum))
                {
                    <input type="checkbox" name="@option.Options.OptionName" value="@option.Options.OptionName">
                    <label for="@option.Options.OptionName"> @option.Options.OptionName</label><br>
                }
            }
            else
            {
                <h3>Something went wrong...</h3>
            }
            </div>
        </div>
    }
}
<form id="creation-form">
    <EditForm Model="@currentCategory" OnValidSubmit="AddFirst">
        <h1>Ný tegund tilkynningar</h1>
        <div class="form-group row">
            <label for="categories" class="col-sm-2 col-form-label">Flokkur</label>
            <div class="col-sm-10">
                <InputSelect @bind-Value="_SelectedCategoryId" id="categories" class="form-control">
                <option value="">Veldu flokk</option>
                @if(categoriesList == null)
                {
                    <option>loading...</option>
                }
                else
                {
                    foreach (var category in categoriesList)
                    {
                        <option value="@System.Convert.ToString(category.CategoryId)" >@category.CategoryName</option>
                    }
                }
                </InputSelect>
            </div>
        </div>
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Heiti tilkynningar</label>
        <div class="col-sm-10">
            <input type="hidden" @bind-value="@currentForm.FormName" />
            <InputText id="name" class="form-control" @bind-Value="@currentForm.FormName" />
        </div>
    </div>
    <div class="form-group row form-inline" id="question-box">
        <input type="hidden" @bind-value="@currentQuestion.QuestionName" />
        <InputText placeholder="Titill spurningar" type="text" class="form-control" id="question-name" @bind-Value="@currentQuestion.QuestionName" />
        <InputSelect @bind-Value="_SelectedQuestionTypeId" id="question-type" class="form-control">
                    <option value="">Veldu tegund</option>
                    @if(questionTypesList == null){
                        <option>loading...</option>
                    }
                    else{
                    foreach (var type in questionTypesList)
                    {
                        <option value="@System.Convert.ToString(type.QuestionTypeId)" >@type.QuestionTypeName</option>
                    }
                    }
        </InputSelect>
        <button type="submit">
            <i class="fas fa-save question-icons"></i>
        </button>
    </div>
    @if(_SelectedQuestionTypeId == "2" || _SelectedQuestionTypeId == "5")
    {
        <div class="form-group row form-inline" id="question-box">
            <label for="OptionName">Valkostur 1</label>
            <input type="hidden" @bind-value="@currentOption1.OptionName" />
            <InputText placeholder="Valkostur 1" id="name" class="form-control" @bind-Value="@currentOption1.OptionName" />
        </div>
            <div class="form-group row form-inline" id="question-box">
            <label for="OptionName">Valkostur 2</label>
            <input type="hidden" @bind-value="@currentOption2.OptionName" />
            <InputText placeholder="Valkostur 1" id="name" class="form-control" @bind-Value="@currentOption2.OptionName" />
        </div>
        if(optionCount == 3)
        {
            <div class="form-group row form-inline" id="question-box">
                <label for="OptionName">Valkostur 3</label>
                <input type="hidden" @bind-value="@currentOption3.OptionName" />
                <InputText placeholder="Valkostur 1" id="name" class="form-control" @bind-Value="@currentOption3.OptionName" />
                <a>
                    <i class="fas fa-trash-alt question-icons"></i>
                </a>
            </div>
        }
        if(optionCount == 4){
            <div class="form-group row form-inline" id="question-box">
                <label for="OptionName">Valkostur 3</label>
                <input type="hidden" @bind-value="@currentOption3.OptionName" />
                <InputText placeholder="Valkostur 1" id="name" class="form-control" @bind-Value="@currentOption3.OptionName" />
                <a>
                    <i class="fas fa-trash-alt question-icons"></i>
                </a>
            </div>
            <div class="form-group row form-inline" id="question-box">
                <label for="OptionName">Valkostur 4</label>
                <input type="hidden" @bind-value="@currentOption4.OptionName" />
                <InputText placeholder="Valkostur 1" id="name" class="form-control" @bind-Value="@currentOption4.OptionName" />
                <a>
                    <i class="fas fa-trash-alt question-icons"></i>
                </a>
            </div>
        }
        if(!(optionCount == 4))
        {
            <div class="form-group row">
                <div class="col-sm-10">
                    <span id="plus-icon" class="oi oi-plus"></span>
                    <a id="add-question-link" @onclick="CreateNewOption">Bæta við valkost</a>
                </div>
            </div>
        }
    }
    </EditForm> 
</form>

@code {

    //Listar sem eru fyrir options í select
    List<Categories> categoriesList;
    List<QuestionTypes> questionTypesList;

    //Breytur sem eru notaðar vegna þess að inputselect styður ekki Int32
    string _SelectedCategoryId;
    string _SelectedQuestionTypeId;

    //Breytur sem þarf að senda inn í gagnagrunn
    FormsInfo currentForm = new FormsInfo();
    Categories currentCategory = new Categories();
    Questions currentQuestion = new Questions();
    Options currentOption1 = new Options();
    Options currentOption2 = new Options();
    Options currentOption3 = new Options();
    Options currentOption4 = new Options();

    //Breytur til þess að birta spurningar sem hafa verið sendar inn
    List<QuestionsFormAssignments> questionsList;
    List<OptionsQuestionAssignmnents> optionsList;
    Forms question = new Forms();
    
    //Breytur sem halda utan um fjölda spurninga
    private int questionCount = 0;
    private int optionCount = 2;

    protected override async Task OnInitializedAsync()
    {
        //Fylla lista af categories og spurningartýpum sem eru í boði
        categoriesList = await catservice.Get();
        questionTypesList = await qtservice.Get();
    }

    private void CreateNewQuestion()
    {
        questionCount++;
    }

    private void DeleteQuestion()
    {
        questionCount--;
    }
    private void CreateNewOption()
    {
        optionCount++;
    }
    private void DeleteOption()
    {
        optionCount--;
    }

    private async void AddFirst()
    {
        if(questionCount == 0)
        {
        //Nýju formi bætt við
        currentForm = await fiservice.Add(currentForm);
        questionCount++;

        //Búið til eintak af CategoriesAssignments og Category og Form tengt saman.
        CategoriesAssignments _CategoriesAssignments = new CategoriesAssignments();
        _CategoriesAssignments.CategoryId = Int32.Parse(_SelectedCategoryId);
        _CategoriesAssignments.FormId = currentForm.FormId;
        await qasservice.Add(_CategoriesAssignments);
        }
        else
        {
            questionCount++;
        }

        //Það QuestionType sem var valið sótt og bætt við í currentQuestion. Henni síðan bætt við sem spurningu
        QuestionTypes _QuestionTypes = new QuestionTypes();
        _QuestionTypes = await qtservice.Get(Int32.Parse(_SelectedQuestionTypeId));
        currentQuestion.QuestionTypes = _QuestionTypes;
        currentQuestion = await qservice.Add(currentQuestion);

        //Búið til eintak af QuestionsFormAssignments. CurrentQuestion tengd við form og sagt til um númer hvað spurningin er
        QuestionsFormAssignments qfa = new QuestionsFormAssignments();
        qfa.FormId = currentForm.FormId;
        qfa.QuestionId = currentQuestion.QuestionId;
        qfa.QuestionOrderNum = questionCount;
        await qfaservice.Add(qfa);

        //Ef spurningin er með RadioButton eða Checkbox
        if(currentQuestion.QuestionTypes.QuestionTypeId == 2 || currentQuestion.QuestionTypes.QuestionTypeId == 5)
        {
            //Fyrsta option bætt við í option töfluna og síðan búið til eintak af OptionsQuestionAssignments og option-inn tengdur við spurningu  
            currentOption1 = await opservice.Add(currentOption1);

            OptionsQuestionAssignmnents FirstOQA = new OptionsQuestionAssignmnents();
            FirstOQA.OptionId = currentOption1.OptionId;
            FirstOQA.FormId = currentForm.FormId;
            FirstOQA.OptionOrderNum = 1;
            FirstOQA.QuestionOrderNum = questionCount;
            FirstOQA = await oqaservice.Add(FirstOQA);
            
            //Sama og fyrir ofan, nema fyrir option númer 2
            currentOption2 = await opservice.Add(currentOption2);

            OptionsQuestionAssignmnents SecondOQA = new OptionsQuestionAssignmnents();
            SecondOQA.OptionId = currentOption2.OptionId;
            SecondOQA.FormId = currentForm.FormId;
            SecondOQA.OptionOrderNum = 2;
            SecondOQA.QuestionOrderNum = questionCount;
            SecondOQA = await oqaservice.Add(SecondOQA);

            if(!(currentOption3.OptionName == null))
            {
                //Sama og fyrir ofan, nema fyrir option 3
                currentOption3 = await opservice.Add(currentOption3);

                OptionsQuestionAssignmnents ThirdOQA = new OptionsQuestionAssignmnents();
                ThirdOQA.OptionId = currentOption3.OptionId;
                ThirdOQA.FormId = currentForm.FormId;
                ThirdOQA.OptionOrderNum = 3;
                ThirdOQA.QuestionOrderNum = questionCount;
                ThirdOQA = await oqaservice.Add(ThirdOQA);
            }

            if(!(currentOption4.OptionName == null))
            {
                //Sama og fyrir ofan, nema fyrir option 4
                currentOption4 = await opservice.Add(currentOption4);

                OptionsQuestionAssignmnents FourthOQA = new OptionsQuestionAssignmnents();
                FourthOQA.OptionId = currentOption4.OptionId;
                FourthOQA.FormId = currentForm.FormId;
                FourthOQA.OptionOrderNum = 4;
                FourthOQA.QuestionOrderNum = questionCount;
                FourthOQA = await oqaservice.Add(FourthOQA);
            }
        }
        //Ef þetta er spurning með textainput
        else
        {
        }

        ClearAll();
    }

    private async void ClearAll()
    {
        //Birta þær spurningar sem hafa verið sendar inn
        questionsList = await qfaservice.Get(currentForm.FormId);
        optionsList = await oqaservice.Get(currentForm.FormId);
        
        _SelectedQuestionTypeId = "";
        Questions replaceQuestion = new Questions();
        currentQuestion = replaceQuestion;

        Options replaceOption1 = new Options();
        currentOption1 = replaceOption1;

        Options replaceOption2 = new Options();
        currentOption2 = replaceOption2;

        Options replaceOption3 = new Options();
        currentOption3 = replaceOption3;

        Options replaceOption4 = new Options();
        currentOption4 = replaceOption4;

        optionCount = 2;

        StateHasChanged();
    }
}