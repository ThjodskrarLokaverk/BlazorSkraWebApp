@page "/Notification/{id}"
@using BlazorSkraApp1.Data
@using BlazorSkraApp1.Services
@inject IQuestionsFormAssignmentService questionservice
@inject IOptionsQuestionAssignmnentsService optionservice
@inject IJSRuntime jsRuntime

@if (questionsList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @foreach(var question in questionsList)
    {
        <div class="card">
            <div class="card-body">
            <h5 class="card-title">@question.Questions.QuestionName</h5>
            @foreach(var option in optionsList.Where(option => option.QuestionOrderNum == question.QuestionOrderNum))
            {
                <p>@option.Options.OptionName</p>
            }
            </div>
        </div>
    }
}

@code{
    [Parameter]
    public string id{ get; set; }

    List<QuestionsFormAssignments> questionsList;
    List<OptionsQuestionAssignmnents> optionsList;
    
    Forms question = new Forms();
    
    protected override async Task OnInitializedAsync()
    {
        var FormId = Int16.Parse(id);
        questionsList = await questionservice.Get(FormId);
        optionsList = await optionservice.Get();
    }

}