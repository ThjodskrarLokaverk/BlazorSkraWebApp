@page "/Notification/{id}"
@using BlazorSkraApp1.Data
@using BlazorSkraApp1.Services
@inject IQuestionsFormAssignmentService questionservice
@inject IOptionsQuestionAssignmnentsService optionservice
@inject IJSRuntime jsRuntime

@if (questionsList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @foreach(var question in questionsList)
    {
        <div class="card">
            <div class="card-body">
            <h5 class="card-title">@question.Questions.QuestionName</h5>
            @if(@question.Questions.QuestionTypes.QuestionTypeName == "Radio")
            {
                @foreach(var option in optionsList.Where(option => option.QuestionOrderNum == question.QuestionOrderNum))
                {
                    <input type="radio" name="@option.Options.OptionName" value="@option.Options.OptionName">
                    <label for="@option.Options.OptionName"> @option.Options.OptionName</label><br>
                }
            }
            else if(@question.Questions.QuestionTypes.QuestionTypeName == "TextShort")
            {
                    <textarea placeholder="Skrifið hér..." rows="1" cols="60"/> <br>
            }
            else if(@question.Questions.QuestionTypes.QuestionTypeName == "TextLong")
            {
                    <textarea placeholder="Skrifið hér..." rows="5" cols="100"/> <br>
            }
            else if(@question.Questions.QuestionTypes.QuestionTypeName == "Multiple")
            {
                @foreach(var option in optionsList.Where(option => option.QuestionOrderNum == question.QuestionOrderNum))
                {
                    <input type="checkbox" name="@option.Options.OptionName" value="@option.Options.OptionName">
                    <label for="@option.Options.OptionName"> @option.Options.OptionName</label><br>
                }
            }
            else
            {
                <h3>Something went wrong...</h3>
            }
            </div>
        </div>
    }
}

@code{
    [Parameter]
    public string id{ get; set; }

    List<QuestionsFormAssignments> questionsList;
    List<OptionsQuestionAssignmnents> optionsList;
    
    protected override async Task OnInitializedAsync()
    {
        var FormId = Int16.Parse(id);
        questionsList = await questionservice.Get(FormId);
        optionsList = await optionservice.Get(FormId);
    }

}