@page "/hafa-samband"
@using MailKit.Net.Smtp
@using MimeKit
@using System
@using BlazorSkraApp1.Services
@using BlazorSkraApp1.Components
@using BlazorSkraApp1.Data
@using Microsoft.AspNetCore.Identity
@inject NavigationManager NavigationManager
@inject IAdminService adminService
@inject IJSRuntime jsRuntime

<!-- A text box for users to send in an inquiry -->

@if (confirmation)
{
    <br>
    <h2 style="text-align:center">Innsendingu hefur verið komið til skila</h2>
    <h5 style="text-align:center">Þú verður aftur á forsíðu innan skamms</h5>
    <meta http-equiv="refresh" content="3; url = /" />
}
else
{
    <div class="container">
        <div class="header">
            <h4 class="modal-title">Hafa samband</h4>
        </div>
        <EditForm Model="@mailForm" OnValidSubmit="@SendMail">
            <div class="form-group">
                <label for="To">Skilaboð:</label>
                <InputTextArea id="body" rows="10" class="form-control" @bind-Value="@mailForm.Body" />
            </div>
            @if (IsClicked)
            {
                <button type="submit" class="btn approve-btn" disabled>
                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                    Í vinnslu...
                </button>
            }
            else
            {
                <button type="submit" class="btn approve-btn">Senda skilaboð</button>
            }
            <DataAnnotationsValidator />
        </EditForm>
    </div>
}

<ConfirmationModalComponent OnClick="SubmissionFailHandler">
    <CustomHeader>Eitthvað fór úrskeiðis</CustomHeader>
    <CustomBody>Skilaboðin komust ekki til skila, vinsamlegast reyndur aftur.</CustomBody>
    <CustomButtonText>Aftur á upphafssíðu</CustomButtonText>
    <CustomCloseButtonText>Reyna aftur</CustomCloseButtonText>
</ConfirmationModalComponent>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    IdentityUser currentUser;
    private bool confirmation;
    private bool IsClicked;
    MailForm mailForm = new MailForm();

    protected override async Task OnInitializedAsync()
    {
        //Get current user
        var userName = (await authenticationStateTask).User.Identity.Name;
        currentUser = await adminService.Get(userName);
    }
    protected async void SendMail()
    {
        //Disable save button
        IsClicked = true;
        StateHasChanged();

        try
        {
            var message = new MimeMessage();
            //Sender of email here
            message.From.Add(new MailboxAddress("blazor.boiler@gmail.com"));
            //receiver of email
            message.To.Add(new MailboxAddress("bbaldvinsson@gmail.com"));
            message.Subject = "Athugasemd/Fyrirspurn " + System.DateTime.Now.ToShortDateString() + " Frá: " + currentUser.Email;
            //Main text build up
            message.Body = new TextPart("html")
            {
                Text = "Message: " + mailForm.Body
            };

            using (var client = new SmtpClient())
            {
                client.Connect("smtp.gmail.com", 587);
                //Email of the sender
                client.Authenticate("blazor.boiler@gmail.com", "Trigger.0987");
                client.Send(message);
                client.Disconnect(false);
                //User sent to home page after having received a notification
                confirmation = true;
                //Enable submit button
                IsClicked = false;
                StateHasChanged();
            }
        }
        catch (Exception)
        {
            await jsRuntime.InvokeAsync<object>("ShowModal", "confirmationModal");
            //Enable submit button
            IsClicked = false;
            StateHasChanged();
        }

    }

    private void SubmissionFailHandler()
    {
        NavigationManager.NavigateTo("/", true);
    }
}
