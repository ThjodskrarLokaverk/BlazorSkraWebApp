@page "/FC"
@using BlazorSkraApp1.Data
@using BlazorSkraApp1.Services
@using BlazorSkraApp1.Models.InputModels
@using BlazorSkraApp1.Shared.Components
@using BlazorSkraApp1.Components
@inject ICategoriesService categoriesService
@inject IQuestionTypesService questionTypesService
<!-- Create form -->
@if (!formSuccess)
{
    <EditForm Model="@formInputModel" OnValidSubmit="CreateForm">
        <h3>Nýtt eyðublað</h3>
        <div class="form-group row">
            <label for="categories" class="col-sm-2 col-form-label">Flokkur</label>
            <div class="col-sm-10">
                <InputSelect @bind-Value="@formInputModel.CategoryId" id="categories" class="form-control">
                    <option value="">Veldu flokk</option>
                    @if (categoriesList == null)
                        {
                        <option>loading...</option>
                        }
                        else
                        {
                            foreach (var category in categoriesList)
                            {
                            <option value="@System.Convert.ToString(category.CategoryId)">@category.CategoryName</option>
                            }
                        }
                    /**/
                    /**/
                    /**/
                </InputSelect>
                <ValidationMessage For="@(() => formInputModel.CategoryId)" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Heiti tilkynningar</label>
            <div class="col-sm-10">
                <InputText id="name" class="form-control" @bind-Value="@formInputModel.FormName" />
                <ValidationMessage For="@(() => formInputModel.FormName)" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Tölvupóstfang</label>
            <div class="col-sm-10">
                <InputText id="email" class="form-control" @bind-Value="@formInputModel.DestinationEmail" />
                <ValidationMessage For="@(() => formInputModel.DestinationEmail)" />
            </div>
        </div>
        <button type="submit" class="btn approve-btn">Búa til eyðublað</button>
        <DataAnnotationsValidator />
    </EditForm>
}

<!-- Create questions for form -->
@if (formSuccess)
{
    <!-- Display the created Form here -->
    <FormViewComponent questionsList="@createdQuestionsList" optionsList="@createdOptionsList" selectedFormName="@selectedFormName" selectedCategory="@selectedCategory" selectedDestinationEmail="@selectedDestinationEmail"></FormViewComponent>

    <EditForm Model="@questionInputModel" OnValidSubmit="CreateQuestion">
        <div class="question-wrapper">
            <div class="card">
                <div class="card-body" id="question-box">
                    <div class="form-group row form-inline">
                        <InputText placeholder="Titill spurningar" type="text" id="question-name" class="form-control" @bind-Value="@questionInputModel.QuestionName" />
                        <InputSelect @bind-Value="@questionInputModel.QuestionTypeId" id="question-type" class="form-control">
                            <option value="">Veldu tegund</option>
                            @if (questionTypesList == null)
                                {
                                <option>loading...</option>
                                }
                                else
                                {
                                    foreach (var type in questionTypesList)
                                    {
                                    <option value="@System.Convert.ToString(type.QuestionTypeId)">@type.QuestionTypeName</option>
                                    }
                                }
                        </InputSelect>
                        <button type="submit" id="save-icon" class="btn btn-link">
                            <i class="fas fa-save"></i>
                        </button>
                    </div>
                </div>
                @if (questionInputModel.QuestionTypeId == "4" || questionInputModel.QuestionTypeId == "5")
                {
                    foreach (var option in questionInputModel.Options)
                    {
                        <div class="option-wrapper">
                            <div class="form-group row">
                                <label for="optionName" class="col-form-label">Valkostur 1</label>
                                <div class="col-sm-4">
                                    <InputText id="optionName" class="form-control" placeholder="Valkostur 1" @bind-Value="@option.OptionName" />
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
        <br>
        <button type="submit" class="btn approve-btn">Bæta spurningu við eyðublað</button>
        <br><br>
        <DataAnnotationsValidator />
    </EditForm>
}


@code {
    //Creation
    FormInputModel formInputModel = new FormInputModel();
    QuestionInputModel questionInputModel = new QuestionInputModel();
    List<Categories> categoriesList;
    List<QuestionTypes> questionTypesList;

    //Display
    List<QuestionsFormAssignments> createdQuestionsList;
    List<OptionsQuestionAssignmnents> createdOptionsList;
    public string selectedFormName;
    public string selectedCategory;
    public string selectedDestinationEmail;
    bool formSuccess = false;
    bool questionSuccess = false;

    //save to database
    FormsInfo currentForm = new FormsInfo();
    Categories currentCategory = new Categories();
    List<Options> optionsList;

    protected override async Task OnInitializedAsync()
    {
        //Fylla lista af categories og spurningartýpum sem eru í boði
        categoriesList = await categoriesService.Get();
        questionTypesList = await questionTypesService.Get();
    }

    private async void CreateForm()
    {
        var category = await categoriesService.Get(Int16.Parse(formInputModel.CategoryId));
        selectedCategory = category.CategoryName;
        selectedFormName = formInputModel.FormName;
        selectedDestinationEmail = formInputModel.DestinationEmail;

        formSuccess = true;
    }

    private void CreateQuestion()
    {
        questionSuccess = true;
    }

    //private async void AddFirst()
    //{
    //    try
    //    {
    //        if (questionCount == 0 && firstDeleted == false)
    //        {
    //            //Nýju formi bætt við
    //            currentForm.FormName = Notification.NewFormName;
    //            currentForm.DestinationEmail = Notification.DestinationEmail;
    //            currentForm = await fiservice.Add(currentForm);

    //            //Búið til eintak af CategoriesAssignments og Category og Form tengt saman.
    //            CategoriesAssignments _CategoriesAssignments = new CategoriesAssignments();
    //            _CategoriesAssignments.CategoryId = Int32.Parse(Notification.CategoryId);
    //            _CategoriesAssignments.FormId = currentForm.FormId;
    //            await qasservice.Add(_CategoriesAssignments);
    //        }

    //        //Það QuestionType sem var valið sótt og bætt við í currentQuestion. Henni síðan bætt við sem spurningu
    //        Questions currentQuestion = new Questions();
    //        QuestionTypes _QuestionTypes = new QuestionTypes();
    //        _QuestionTypes = await qtservice.Get(Int32.Parse(Notification.QuestionTypeId));
    //        currentQuestion.QuestionName = Notification.QuestionName;
    //        currentQuestion.QuestionTypes = _QuestionTypes;
    //        currentQuestion = await qservice.Add(currentQuestion);

    //        //Búið til eintak af QuestionsFormAssignments. CurrentQuestion tengd við form og sagt til um númer hvað spurningin er
    //        QuestionsFormAssignments qfa = new QuestionsFormAssignments();
    //        qfa.FormId = currentForm.FormId;
    //        qfa.QuestionId = currentQuestion.QuestionId;
    //        qfa.QuestionOrderNum = questionCount;
    //        await qfaservice.Add(qfa);

    //        //Ef spurningin er með RadioButton eða Checkbox
    //        if (currentQuestion.QuestionTypes.QuestionTypeId == 2 || currentQuestion.QuestionTypes.QuestionTypeId == 5)
    //        {
    //            //Fyrsta option bætt við í option töfluna og síðan búið til eintak af OptionsQuestionAssignments og option-inn tengdur við spurningu
    //            currentOption1 = await opservice.Add(currentOption1);

    //            OptionsQuestionAssignmnents OQA = new OptionsQuestionAssignmnents();
    //            OQA.OptionId = currentOption1.OptionId;
    //            OQA.FormId = currentForm.FormId;
    //            OQA.OptionOrderNum = 1;
    //            OQA.QuestionOrderNum = questionCount;
    //            OQA = await oqaservice.Add(OQA);

    //            //Sama og fyrir ofan, nema fyrir option númer 2
    //            currentOption2 = await opservice.Add(currentOption2);

    //            OptionsQuestionAssignmnents SecondOQA = new OptionsQuestionAssignmnents();
    //            SecondOQA.OptionId = currentOption2.OptionId;
    //            SecondOQA.FormId = currentForm.FormId;
    //            SecondOQA.OptionOrderNum = 2;
    //            SecondOQA.QuestionOrderNum = questionCount;
    //            SecondOQA = await oqaservice.Add(SecondOQA);

    //            if (!(currentOption3.OptionName == null))
    //            {
    //                //Sama og fyrir ofan, nema fyrir option 3
    //                currentOption3 = await opservice.Add(currentOption3);

    //                OptionsQuestionAssignmnents ThirdOQA = new OptionsQuestionAssignmnents();
    //                ThirdOQA.OptionId = currentOption3.OptionId;
    //                ThirdOQA.FormId = currentForm.FormId;
    //                ThirdOQA.OptionOrderNum = 3;
    //                ThirdOQA.QuestionOrderNum = questionCount;
    //                ThirdOQA = await oqaservice.Add(ThirdOQA);
    //            }

    //            if (!(currentOption4.OptionName == null))
    //            {
    //                //Sama og fyrir ofan, nema fyrir option 4
    //                currentOption4 = await opservice.Add(currentOption4);

    //                OptionsQuestionAssignmnents FourthOQA = new OptionsQuestionAssignmnents();
    //                FourthOQA.OptionId = currentOption4.OptionId;
    //                FourthOQA.FormId = currentForm.FormId;
    //                FourthOQA.OptionOrderNum = 4;
    //                FourthOQA.QuestionOrderNum = questionCount;
    //                FourthOQA = await oqaservice.Add(FourthOQA);
    //            }
    //        }
    //        //Ef þetta er spurning með textainput
    //        else { }

    //        ClearAll();
    //    }
    //    catch (Exception)
    //    {
    //        // Catch Exception that occur when user push twice on save button - it doesn't have any affect.
    //        //hér gætum við sett inn log  í logfile??
    //    }
    //    questionCount++;
    //}

    public DateTime SelectedDate { get; set; }

    public void OnDateSelected(DateTime dt)
    {
        SelectedDate = dt;
    }
}
