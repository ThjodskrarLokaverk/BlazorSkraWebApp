@page "/Submissions"
@using BlazorSkraApp1.Data
@using BlazorSkraApp1.Services
@inject IAdminService adminservice
@inject ISubmissionsService submissionservice
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime jsRuntime
@inject IMailService mailservice;

@if (submissionList == null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="sr-only">Augnablik...</span>
        </div>
    </div>
}
else
{
    <AuthorizeView>
        <div class="container">
            <h2>Mínar innsendingar</h2>
            <table class="table table-striped table-md">
                <thead id="user-thead">
                    <tr>
                        <th class="text-uppercase">Nafn eyðublaðs
                            <button class="btn up-down" @onclick="(() => SortFormName())"><i class="fas fa-sort-alpha-up"></i> </button>
                        </th>
                        <th class="text-uppercase">Notandi</th>
                        <th class="text-uppercase">Innsent
                            <button class="btn up-down" @onclick="(() => SortDate())"><i class="fas fa-sort-alpha-up"></i> </button>
                        </th>
                        <th class="text-uppercase">PDF</th>
                    </tr>
                </thead>
                <tbody class="table-body">
                @foreach(var submission in submissionList)
                {
                    if((GetForUser(submission, @context.User.Identity.Name)) == true)
                    {
                        <tr>
                            <td>@submission.Form.FormName</td>
                            <td>@submission.Submission.UserId</td>
                            <td>@submission.Submission.SubmissionDate.ToString("dd/MM/yy")</td>
                            <td><button class="btn approve-btn" @onclick="@((eventArgs) => GeneratePDFFile(submission.Form.FormId, submission.SubmissionId, submission.Submission.UserId))">Sækja</button></td>
                        </tr>
                    }
                }
                </tbody>
            </table>
        </div>
    </AuthorizeView>
}

@code{
    List<Submissions> alreadyPosted = new List<Submissions>();
    List<Submissions> submissionList;
    bool isSortedFormName = false;
    bool isSortedDate = false;

    protected override async Task OnInitializedAsync()
    {
        submissionList = await submissionservice.Get();
    }
    
    public bool GetForUser(Submissions s, string name)
    {
        if(s.Submission.UserId == name)
        {
        Submissions sub = alreadyPosted.Find(id => id.SubmissionId == s.SubmissionId);

        foreach(var submission in alreadyPosted)
        {
            if(s.SubmissionId == submission.SubmissionId)
            {
                return false;
            }
        }

        alreadyPosted.Add(s);
        return true;
        }
        else
        {
            return false;
        }
    }

    void SortFormName()
    {
        if(!isSortedFormName)
        {
            submissionList = submissionList.OrderBy(x => x.Form.FormName).ToList();
            isSortedFormName = true;
        }
        else
        {
            submissionList = submissionList.OrderByDescending(x => x.Form.FormName).ToList();
            isSortedFormName = false;
        }
        alreadyPosted = new List<Submissions>();
        StateHasChanged();
    }

    void SortDate()
    {
        if(!isSortedDate)
        {
            submissionList = submissionList.OrderBy(x => x.Submission.SubmissionDate).ToList();
            isSortedDate = true;
        }
        else
        {
            submissionList = submissionList.OrderByDescending(x => x.Submission.SubmissionDate).ToList();
            isSortedDate = false;
        }
        alreadyPosted = new List<Submissions>();
        StateHasChanged();
    }

    public void GeneratePDFFile(int FormId, int submissionId, string userEmail)
    {
        mailservice.PDFBuilder(FormId, submissionId, userEmail, false, jsRuntime);
        alreadyPosted = new List<Submissions>();
    }
}