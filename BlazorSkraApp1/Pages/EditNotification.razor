@page "/EditNotification/{id}"
@attribute [Authorize]
@using BlazorSkraApp1.Data
@using BlazorSkraApp1.Services
@inject IQuestionsFormAssignmentService qfaservice
@inject IOptionsQuestionAssignmnentsService oqaservice
@inject IQuestionsService qservice
@inject IOptionsService opservice
@inject IFormsInfoService fiservice
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime jsRuntime

<p>@confirmationString</p>
    <EditForm Model="FormInfo">
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Heiti tilkynningar</label>
            <div class="col-sm-10" id="">
                <InputText id="NewFormName" class="form-control edit-notification" @bind-Value="@FormInfo.FormName" />
            </div>
        </div>
         <div class="form-group row">
            <label class="col-sm-2 col-form-label">Tölvupóstfang: </label>
            <div class="col-sm-10" id="">
                <InputText id="NewFormName" class="form-control edit-notification" @bind-Value="@FormInfo.DestinationEmail" />
            </div> 
        </div>
    </EditForm>


@* //<button type="button" @onclick="(() => UpdateFormName(FormInfo))" class="btn approve-btn edit-notification">Uppfæra nafn</button> *@


@if (questionsList == null){}
else
{
    @foreach(var question in questionsList)
    {
        <div class="card">
            <div class="card-body">
            <div>
                <h5 class="card-title">@question.Questions.QuestionName</h5>
                <button class="btn btn-link edit-icon" @onclick="(() => ShowEditPopup(question))" data-toggle="modal" data-target="#confirmDeleteModal" value="Delete" >
                    <i class="fas fa-pen" title="Modifier"></i>
                </button>
            </div>
            @if(@question.Questions.QuestionTypes.QuestionTypeName == "Radio")
            {
                @foreach(var option in optionsList.Where(option => option.QuestionOrderNum == question.QuestionOrderNum))
                {
                    <input type="radio" name="@option.Options.OptionName" value="@option.Options.OptionName">
                    <label for="@option.Options.OptionName"> @option.Options.OptionName</label><br>
                }
            }
            else if(@question.Questions.QuestionTypes.QuestionTypeName == "TextShort")
            {
                    <textarea placeholder="Skrifið hér..." rows="1" cols="60"/> <br>
            }
            else if(@question.Questions.QuestionTypes.QuestionTypeName == "TextLong")
            {
                    <textarea placeholder="Skrifið hér..." rows="5" cols="100"/> <br>
            }
            else if(@question.Questions.QuestionTypes.QuestionTypeName == "Multiple")
            {
                @foreach(var option in optionsList.Where(option => option.QuestionOrderNum == question.QuestionOrderNum))
                {
                    <input type="checkbox" name="@option.Options.OptionName" value="@option.Options.OptionName">
                    <label for="@option.Options.OptionName"> @option.Options.OptionName</label><br>
                }
            }
            else
            {
                <h3>Something went wrong...</h3>
            }
            </div>
        </div>
    }
    <button type="button" @onclick="(() => UpdateFormName(FormInfo))" class="btn approve-btn edit-notification">Uppfæra</button> 
}
@if(showEdit)
{
    <div class="modal" tabindex="-1" style="display:block" role="dialog" >
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Uppfæra / Eyða</h4>
                    <button type="button" class="close" data-dismiss="modal" @onclick="Cancel">&times; </button>
                </div>
                <div class="modal-body">
                    <EditForm Model="@deleteQuestion" OnValidSubmit="@UpdateQuestion">
                        <div class="form-group">
                            <label for="deleteQuestionName">Nafn spurningar</label>
                            <InputText id="name" class="form-control" @bind-Value="@deleteQuestion.QuestionName" />
                        </div>
                        <div class="form-group">
                            @foreach(var option in optionsList.Where(option => option.QuestionOrderNum == deleteQuestionDown.QuestionOrderNum))
                            {
                                <label for="deleteOptionName">Nafn valkosts</label>
                                <InputText id="name" class="form-control" @bind-Value="@option.Options.OptionName" />
                            }
                        </div>
                    </EditForm>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn approve-btn" @onclick="(() => UpdateQuestion())" >Uppfæra</button>
                    <button type="button" class="btn btn-danger" @onclick="(() => ShowDeletePopup(deleteQuestion))" >Eyða</button>
                    <button type="button" class="btn cancel-btn" @onclick="Cancel" data-dismiss="modal">Hætta við</button>
                </div>
            </div>
        </div>
    </div>
}

@if(showDelete)
{
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"> Staðfesting</h5>
                    <button type="button" class="close" data-dismiss="modal" @onclick="Cancel">&times;</button>
                </div>
                <div class="modal-body">
                    <p>Ertu viss um að þú viljir eyða flokknum @deleteQuestion.QuestionName? </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" @onclick="(() => Delete(deleteQuestion))">Eyða</button>
                    <button type="button" class="btn cancel-btn" @onclick="Cancel" data-dismiss="modal">Hætta við</button>
                </div>
            </div>
        </div>
    </div>
}

@code{
    [Parameter]
    public string id { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    List<QuestionsFormAssignments> questionsList;
    List<OptionsQuestionAssignmnents> optionsList;
    QuestionsFormAssignments deleteQuestionDown = new QuestionsFormAssignments();
    Questions deleteQuestion = new Questions();
    FormsInfo FormInfo = new FormsInfo();
    bool showDelete = false;
    bool showEdit = false;
    string confirmationString = "";
    protected override async Task OnInitializedAsync()
    {
        var FormId = Int16.Parse(id);
        questionsList = await qfaservice.Get(FormId);
        optionsList = await oqaservice.Get(FormId);
        FormInfo = await fiservice.Get(FormId);
    }
    private async void ShowEditPopup(QuestionsFormAssignments question)
    {
        deleteQuestionDown = question;

        deleteQuestion = await qservice.GetQuestion(deleteQuestionDown.Questions.QuestionId);
        showEdit = true;
    }

    void ShowDeletePopup(Questions question)
    {
        showEdit = false;
        showDelete = true;
    }

    void Cancel()
    {
        showDelete = false;
        showEdit = false;
    }
    protected async void UpdateFormName(FormsInfo form)
    {
        FormInfo = await fiservice.Update(form.FormId);
        confirmationString = "Nafn hefur verið uppfært";

        StateHasChanged();
    }

    protected async void UpdateQuestion()
    {
        Options editOption = new Options();

        await qservice.Update(deleteQuestion);

        foreach(var option in optionsList)
        {
            editOption = await opservice.Get(option.OptionId);
            await opservice.Update(editOption);
        }

        showEdit = false;
        StateHasChanged();
    }

    private async Task Delete(Questions deleteQuestion)
    {
        //Setja fyrirvara um hversu vel við viljum gera þetta. Gæti tekið mjög lengann tíma að framkvæma aðgerðina
        //Spurning hvort við viljum bara aftengja eina töflu og láta draslið sitja í hinum
        Options deleteOption = new Options();
        int deleteQuestionCount = deleteQuestionDown.QuestionOrderNum;
        await qservice.Delete(deleteQuestion);

        List<OptionsQuestionAssignmnents> deleteOptionsDown = await oqaservice.Get(deleteQuestionDown.FormId);

        foreach(var option in deleteOptionsDown.Where( option => option.QuestionOrderNum == deleteQuestionDown.QuestionOrderNum))
        {
            deleteOption = await opservice.Get(option.OptionId);
            await opservice.Delete(deleteOption);
            await oqaservice.Delete(option);
        }

        questionsList = await qfaservice.Get(Int32.Parse(id));
        optionsList = await oqaservice.Get(Int32.Parse(id));

        foreach(var question in questionsList.Where(question => question.QuestionOrderNum == deleteQuestionCount))
        {
            await qfaservice.Delete(question);
        }
        
        showDelete = false;
        StateHasChanged();
    }

}