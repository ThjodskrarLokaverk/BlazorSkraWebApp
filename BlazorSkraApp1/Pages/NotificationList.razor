@page "/NotificationList/{id}"
@using BlazorSkraApp1.Components
@using BlazorSkraApp1.Data
@using BlazorSkraApp1.Services
@inject ICategoriesAssignmentsService catAssignService
@inject IFormsInfoService formservice
@inject IJSRuntime jsRuntime
@inject ICategoriesService catService

@if (categoriesAssignmentsList == null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="container">
        <AuthorizeView Roles="Admin">
        <div class="container">
        <button onclick="window.location.href='/CF'" class="btn btn-success add-type">
            <i class="far fa-plus-square"></i>
            Bæta við tilkynningu
        </button>
        </div>
        </AuthorizeView>
            <div class="row">
            @foreach (var categoryAssignment in categoriesAssignmentsList)
            {       
                    <div class="col-md-4">
                        <button class="btn btn-link btn-xs table-icon" data-toggle="modal">
                                <a id="a-tag" href="EditNotification/@categoryAssignment.FormsInfo.FormId">
                                    <i class="fas fa-pen sub-list-pen" title="Modifier"></i>
                                </a>
                        </button>
                        <button @onclick="(() => SelectCategoryAssignment(categoryAssignment))" class="btn btn-link btn-xs table-trash" data-toggle="modal" data-target="#confirmationModal">
                            <i class="fas fa-trash sub-list-trash" title="Trash"></i>
                        </button>
                        <div class="card card-list">
                            <img src="Images/form.svg" class="card-img-top" alt="notification form">
                            <div class="card-body body-list">
                                <h5 class="card-title title-list">@categoryAssignment.FormsInfo.FormName</h5>
                                <a href="/Notification/@categoryAssignment.FormsInfo.FormId" class="stretched-link"></a>
                        </div>
                    
                    </div>
                </div>
            }
            </div> 
             
            @if (!categoriesAssignmentsList.Any())
            // only displayed when there is no assignment in the category
            {
                 <AuthorizeView Roles="Admin">
                    <Authorized>
                        <h5 class="empty-state"> Það er engin tilkynning í þessum flokki. Bættu við tilkynningu með því að smella á "bæta við tilkynningu" upp í vinstra horninu. </h5>
                    </Authorized>
                    <NotAuthorized> 
                        <h5 class="empty-state"> Það er engin tilkynning í þessum flokki. Vinsamlegast hafðu samband við stjórnanda ef þú telur vanta í þennan flokk. </h5>
                    </NotAuthorized>
                </AuthorizeView>

                <img src="Images/meditation-bw.png" class="mediationIMG" alt="Empty state">
               
            }
            
    </div>
   

    <ConfirmationModalComponent OnClick="DeleteNotificationHandler">
        <CustomHeader>Eyða tilkynningu</CustomHeader>
        <CustomBody>Ertu viss um að þú viljir eyða tilkynningunni @(selectedCategoryAssignment.FormsInfo.FormName)?</CustomBody>
        <CustomButtonText>Eyða</CustomButtonText>
    </ConfirmationModalComponent>
}

@code{
    [Parameter]
    public string id { get; set; }
    private int categoryId;
    List<CategoriesAssignments> categoriesAssignmentsList;
    Categories category = new Categories();
    CategoriesAssignments selectedCategoryAssignment;

    protected override async Task OnInitializedAsync()
    {
        //init selectedCategoryAssignment
        selectedCategoryAssignment = new CategoriesAssignments();
        selectedCategoryAssignment.FormsInfo = new FormsInfo();

        categoryId = Int16.Parse(id);

        //Get info about the category
        category = await catService.Get(categoryId);

        //Get a list of notifications assigned to the relevant category
        categoriesAssignmentsList = await catAssignService.Get(categoryId);

    }
    private void SelectCategoryAssignment(CategoriesAssignments categoryassignment)
    {
        selectedCategoryAssignment = categoryassignment;
    }

    protected async void DeleteNotificationHandler()
    {
        //Remove the notification/form from the list of notifications in this category
        await catAssignService.Delete(selectedCategoryAssignment);

        //Delete the notification/form from the database
        await formservice.Delete(selectedCategoryAssignment.FormId);

        //remove the notification/form from the list on this page
        categoriesAssignmentsList.Remove(selectedCategoryAssignment);

        //refresh UI
        StateHasChanged();
    }
}