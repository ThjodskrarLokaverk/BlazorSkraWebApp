@page "/"
@using BlazorSkraApp1.Data
@using BlazorSkraApp1.Services
@inject ICategoriesService service
@inject IJSRuntime jsRuntime
@inject NavigationManager NavigationManager

@if (categoriesList == null)
{
    <p><em>Loading...</em></p>
}
else
{

  @foreach (var category in categoriesList)
  {
    <div class="linkboxes">
      <div class="col-md-4 col-xs-6">
        <button class="boxes btn text-uppercase" @onclick="NotificationList">@category.CategoryName</button>
      </div>
    </div>
  }

  <AuthorizeView>
    <Authorized>
      <div class="linkboxes">
        <div class="col-md-4 col-xs-6">
          <button class="add-category-link boxes btn text-uppercase" @onclick="ShowCategoryPopup">
            <span class="oi oi-plus"></span> Búa til flokk
          </button>
        </div>
      </div>
    </Authorized>
  </AuthorizeView>

  @if(showPopup)
  {
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h4 class="modal-title">Bæta við nýjum flokk</h4>
              <button type="button" class="close" @onclick="Cancel">
                <span aria-hidden="true">X</span>
              </button>
          </div>
          <div class="modal-body">
            <EditForm Model="@category" OnValidSubmit="@AddCategory">
              <div class="form-group">
                <label for="categoryName">Category Name</label>
                <input type="hidden" @bind-value="@category.CategoryName" />
                <InputText id="name" class="form-control" @bind-Value="@category.CategoryName" />
                <ValidationMessage For="@(() => category.CategoryName)" />
              </div>
              <button type="submit" class="btn btn-primary">Bæta við</button>
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Hætta við</button>
              <DataAnnotationsValidator />
            </EditForm>
          </div>
        </div>
      </div>
    </div>
  }
}

@code {
    List<Categories> categoriesList;
    Categories category = new Categories();
    protected override async Task OnInitializedAsync()
    {
        categoriesList = await service.Get();
    }
    bool showPopup = false;
    void ShowCategoryPopup()
    {
        showPopup = true;
    }
    void Cancel()
    {
        showPopup = false;
    }

    void NotificationList()
    {
      NavigationManager.NavigateTo("/list");
    }
                   
    protected void AddCategory() 
    {
      service.Add(category);
      showPopup = false;
    }
}