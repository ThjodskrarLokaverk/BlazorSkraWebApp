@page "/UserList"
@using BlazorSkraApp1.Services
@using System.Linq
@using Microsoft.AspNetCore.Identity;
@inject IAdminService service
@inject AuthenticationStateProvider AuthenticationStateProvider
<AuthorizeView Roles="Admin">
    <Authorized>
        @if (userList == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <div class="container">
                <input class="searchUsers" type="text" placeholder="Leita.." @bind-value="@searchString" />
                <button class="btn search-button" @onclick="@SearchUsers"><i class="fas fa-search"></i> </button>
                <table class="table table-striped table-md">
                    <thead id="user-thead">
                        <tr>
                            <th class="text-uppercase">
                                 Nafn 
                                <button class="btn up-down" @onclick="(() => SortUsersAscending())"><i class="fas fa-sort-alpha-up"></i> </button> 
                            </th>
                            <th class="text-uppercase">Netfang</th>
                            <th class="text-uppercase">Breyta hlutverki</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in userList)
                        {
                            <tr>
                                <td>@user.UserName</td>
                                <td>@user.Email</td>
                                <td>
                                    @if (adminUsersList.Contains(user))
                                    {
                                        <button @onclick="(() => SelectUser(user))" data-toggle="modal" data-target="#removeAdminModal" class="btn cancel-btn">
                                            Óvirkja stjórnanda
                                        </button>
                                    }
                                    else
                                    {
                                        <button @onclick="(() => SelectUser(user))" data-toggle="modal" data-target="#addAdminModal" class="btn approve-btn">
                                            Virkja stjórnanda
                                        </button>
                                    }
                                </td>
                                <td>
                                    <button @onclick="(() => SelectUser(user))" data-toggle="modal" data-target="#deleteUserModal" class="btn btn-danger">
                                        Eyða notanda
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Add user to admin role popup -->
            <div class="modal fade" id="addAdminModal" tabindex="-1" role="dialog" aria-labelledby="modalTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalTitle">Setja í stjórnendahlutverk</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <p>Ertu viss um að þú viljir gera @selectedUser.UserName að stjórnanda?</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn approve-btn" data-dismiss="modal" aria-label="Close" @onclick="(() => AddAdminRole(selectedUser))">Já</button>
                            <button type="button" class="btn cancel-btn" data-dismiss="modal" aria-label="Close">Nei</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Remove user from admin role popup -->
            <div class="modal fade" id="removeAdminModal" tabindex="-1" role="dialog" aria-labelledby="modalTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalTitle">Fjarlægja úr stjórnendahlutverki</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <p>Ertu viss um að þú viljir fjarlægja @selectedUser.UserName úr stjórnendahlutverki?</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn approve-btn" data-dismiss="modal" aria-label="Close" @onclick="(() => RemoveAdminRole(selectedUser))">Já</button>
                            <button type="button" class="btn cancel-btn" data-dismiss="modal" aria-label="Close">Nei</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- delete user popup -->
            <div class="modal fade" id="deleteUserModal" tabindex="-1" role="dialog" aria-labelledby="modalTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalTitle">Eyða notanda</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <p>Ertu viss um að þú viljir eyða notandanum @(selectedUser.UserName)?</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn approve-btn" data-dismiss="modal" aria-label="Close" @onclick="(() => DeleteUser(selectedUser))">Já</button>
                            <button type="button" class="btn cancel-btn" data-dismiss="modal" aria-label="Close">Nei</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </Authorized>
    <NotAuthorized>
        <p>You're not authorized to view this page.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    // Property used to add or edit the currently selected user
    IdentityUser selectedUser = new IdentityUser();
    // Collection to display the existing users
    List<IdentityUser> userList;
    // Collection to display the admin users
    List<IdentityUser> adminUsersList;
    private string searchString;

    protected override async Task OnInitializedAsync()
    {
        await GetAdminUsers();
        await GetUsers();
    }

    async Task GetUsers()
    {
        userList = await service.Get();
    }

    async Task GetAdminUsers()
    {
        adminUsersList = await service.GetAdminUsers();
    }

    private void SelectUser(IdentityUser user)
    {
        selectedUser = user;
    }

    //Add user to the Admin role
    async Task AddAdminRole(IdentityUser user)
    {
        await service.AddAdminRole(user);
        adminUsersList.Add(user);
        StateHasChanged();
    }

    //Remove user from the Admin role
    async Task RemoveAdminRole(IdentityUser user)
    {
        await service.RemoveAdminRole(user);
        adminUsersList.Remove(user);
        StateHasChanged();
    }

    async Task DeleteUser(IdentityUser user)
    {
        await service.Delete(user);
        userList.Remove(user);
        StateHasChanged();
    }

    async Task SearchUsers()
    {
        //Get list of users that match the search string
        userList = await service.GetSearchList(searchString);
        StateHasChanged();
    }

    void SortUsersAscending()
    {
        userList = userList.OrderBy(x => x.UserName).ToList();
        StateHasChanged();
    }

    void SortUsersDescending()
    {
        userList = userList.OrderByDescending(x => x.UserName).ToList();
        StateHasChanged();
    }
}
