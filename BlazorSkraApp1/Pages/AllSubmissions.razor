@page "/allar-innsendingar"
@using BlazorSkraApp1.Data
@using BlazorSkraApp1.Services
@inject ISubmissionsInfoService submissionsInfoService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime jsRuntime
@inject IMailService mailservice;

@* *** A table containing all submissions younger than 7 days old *** *@

<AuthorizeView Roles="Admin">
    <Authorized>
        @if (submissionsInfoList == null)
        {
            <div class="d-flex justify-content-center">
                <div class="spinner-border" role="status">
                    <span class="sr-only">Augnablik...</span>
                </div>
            </div>
        }
        else
        {
            <div class="container">
                <h2>Allar innsendingar</h2>
                <table class="table table-striped table-md">
                    <thead id="user-thead">
                        <tr>
                            <th class="text-uppercase">
                                Nafn eyðublaðs
                                <button class="btn up-down" @onclick="(() => SortFormName())"><i class="fas fa-sort-alpha-up"></i> </button>
                            </th>
                            <th class="text-uppercase">
                                Notandi
                                <button class="btn up-down" @onclick="(() => SortUserEmail())"><i class="fas fa-sort-alpha-up"></i> </button>
                            </th>
                            <th class="text-uppercase">
                                Innsent
                                <button class="btn up-down" @onclick="(() => SortDate())"><i class="fas fa-sort-alpha-up"></i> </button>
                            </th>
                            <th class="text-uppercase">
                                Auðkenni
                                <button class="btn up-down" @onclick="(() => SortSubmissionId())"><i class="fas fa-sort-alpha-up"></i> </button>
                            </th>
                        </tr>
                    </thead>
                    <tbody class="table-body">
                        @foreach (var submissionInfo in submissionsInfoList)
                        {
                            <tr>
                                <td>@submissionInfo.FormName</td>
                                <td>@submissionInfo.UserId</td>
                                <td>@submissionInfo.SubmissionDate.ToString("dd/MM/yy")</td>
                                <td>@submissionInfo.SubmissionId</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </Authorized>
</AuthorizeView>
@code{
    List<SubmissionsInfo> submissionsInfoList;
    bool isSortedFormName = false;
    bool isSortedUserEmail = false;
    bool isSortedDate = false;
    bool isSortedId = false;

    protected override async Task OnInitializedAsync()
    {
        submissionsInfoList = await submissionsInfoService.Get();
    }

    // Sorts elements in table by the form name
    void SortFormName()
    {
        if (!isSortedFormName)
        {
            submissionsInfoList = submissionsInfoList.OrderBy(s => s.FormName).ToList();
            isSortedFormName = true;
        }
        else
        {
            submissionsInfoList = submissionsInfoList.OrderByDescending(s => s.FormName).ToList();
            isSortedFormName = false;
        }
        StateHasChanged();
    }

    // Sorts elements in table by the user email
    void SortUserEmail()
    {
        if (!isSortedUserEmail)
        {
            submissionsInfoList = submissionsInfoList.OrderBy(s => s.UserId).ToList();
            isSortedUserEmail = true;
        }
        else
        {
            submissionsInfoList = submissionsInfoList.OrderByDescending(s => s.UserId).ToList();
            isSortedUserEmail = false;
        }
        StateHasChanged();
    }

    // Sorts elements in table by the submission date
    void SortDate()
    {
        if (!isSortedDate)
        {
            submissionsInfoList = submissionsInfoList.OrderBy(s => s.SubmissionDate).ToList();
            isSortedDate = true;
        }
        else
        {
            submissionsInfoList = submissionsInfoList.OrderByDescending(s => s.SubmissionDate).ToList();
            isSortedDate = false;
        }
        StateHasChanged();
    }

    // Sorts elements in table by the submission id
    void SortSubmissionId()
    {
        if (!isSortedId)
        {
            submissionsInfoList = submissionsInfoList.OrderBy(s => s.SubmissionId).ToList();
            isSortedId = true;
        }
        else
        {
            submissionsInfoList = submissionsInfoList.OrderByDescending(s => s.SubmissionId).ToList();
            isSortedId = false;
        }
        StateHasChanged();
    }
}