@using System.Globalization
@typeparam TValue
@inherits InputBase<TValue>
<!-- This component is from the microsoft docs on Blazor 
    https://docs.microsoft.com/en-us/aspnet/core/blazor/forms-validation?view=aspnetcore-3.1&fbclid=IwAR33FwEZWO6dvN6K4c2SDEnuqYFeqoHXMjOvSqLDCYJBeiwxC520GM6ehaI
    See under "Working with radio buttons -->

<input @attributes="AdditionalAttributes" type="radio" value="@SelectedValue"
       checked="@(SelectedValue.Equals(Value))" @onchange="OnChange" />

@code {
    [Parameter]
    public TValue SelectedValue { get; set; }

    private void OnChange(ChangeEventArgs args)
    {
        CurrentValueAsString = args.Value.ToString();
    }

    protected override bool TryParseValueFromString(string value,
        out TValue result, out string errorMessage)
    {
        var success = BindConverter.TryConvertTo<TValue>(
            value, CultureInfo.CurrentCulture, out var parsedValue);
        if (success)
        {
            result = parsedValue;
            errorMessage = null;

            return true;
        }
        else
        {
            result = default;
            errorMessage = $"{FieldIdentifier.FieldName} field isn't valid.";

            return false;
        }
    }
}