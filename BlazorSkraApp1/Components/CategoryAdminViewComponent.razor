@using Microsoft.AspNetCore.Components
@using BlazorSkraApp1.Data
@using BlazorSkraApp1.Services
@inject ICategoriesService service

<AuthorizeView Roles="Admin" Context="authContext">
    @if (categoriesList == null)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <div class="container">
            <button data-toggle="modal" type="button" data-target="#addCategoryModal" class="btn btn-success add-category">
            <i class="far fa-plus-square"></i>
            Bæta við flokk
            </button>
        </div>
        @foreach (var category in categoriesList)
        {
            categoryCounter +=1;
            <div class="linkboxes">
                <div class="col-md-4 col-xs-6">
                    <button @onclick="(() => SelectCategory(category))" data-toggle="modal" data-target="#editCategoryModal" class="btn btn-link edit-icon">
                        <i class="fas fa-pen indexPen" title="Modifier"></i>
                    </button>
                    <a href="/NotificationList/@category.CategoryId">
                    <div class="boxes btn">
                        <a href="/NotificationList/@category.CategoryId" class="text-uppercase">@category.CategoryName</a>
                    </div>
                    </a>
                </div>
            </div>
            
        }
    }
    @if (categoryCounter == 0)
    {
        // displayed when there is no category on the site
          <AuthorizeView Roles="Admin">
            <Authorized>
                <h5 class="empty-state"> Enginn flokkur hefur verið stofnaður. Búðu til flokk með því að smella á "bæta við flokk" upp í vinstra horninu. </h5>
            </Authorized>
        </AuthorizeView>
        <img src="Images/meditation-bw.png" class="mediationIMG" alt="Empty state">
      
    }

    <!-- Edit Category popup modal -->
    <CategoryEditComponent OnEdit="EditCategoryHandler" OnDelete="DeleteCategoryHandler" selectedCategory="@selectedCategory"></CategoryEditComponent>

    <!-- Add Category popup modal -->
    <CategoryAddComponent OnAdd="AddCategoryHandler"></CategoryAddComponent>
</AuthorizeView>

@code {
    List<Categories> categoriesList;

    Categories selectedCategory = new Categories();

    int categoryCounter = 0;

    protected override async Task OnInitializedAsync()
    {
        //Fetch the list of categories from the database
        categoriesList = await service.Get();
    }

    private void SelectCategory(Categories category)
    {
        selectedCategory = category;
    }

    protected void AddCategoryHandler(Categories newCategory)
    {
        categoriesList.Add(newCategory);
    }

    protected void EditCategoryHandler(Categories editedCategory)
    {
        //ATH: Mögulega er try catch óþarfi hér
        try
        {
            var category = categoriesList.FirstOrDefault(c => c.CategoryId == editedCategory.CategoryId);

            if (category != null)
            {
                category.CategoryName = editedCategory.CategoryName;
            }
        }
        catch (Exception)
        {

        }
    }

    protected void DeleteCategoryHandler()
    {
        categoriesList.Remove(selectedCategory);
    }
}
