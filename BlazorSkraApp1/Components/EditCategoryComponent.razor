@using Microsoft.AspNetCore.Components
@using BlazorSkraApp1.Data
@using BlazorSkraApp1.Services
@inject ICategoriesService service

<AuthorizeView Roles="Admin">
    <button class="btn btn-link edit-icon" @onclick="PopUpDisplayToggle" data-toggle="modal" data-target="#confirmDeleteModal" value="Delete">
        <i class="fas fa-pen" title="Modifier"></i>
    </button>
</AuthorizeView>

@if (showPopUp)
{
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Uppfæra / Eyða</h4>
                    <button type="button" class="close" data-dismiss="modal" @onclick="PopUpDisplayToggle">&times; </button>
                </div>
                <EditForm Model="@currentCategory" OnValidSubmit="@EditCategory">
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="categoryName">Nafn flokks</label>
                            <input type="hidden" @bind-value="@currentCategory.CategoryName" />
                            <InputText id="name" class="form-control" @bind-Value="@currentCategory.CategoryName" />
                            <ValidationMessage For="@(() => currentCategory.CategoryName)" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn approve-btn">Uppfæra</button>
                        <button type="button" class="btn btn-danger" @onclick="DeletePopUpDisplayToggle" data-dismiss="modal">Eyða</button>
                        <button type="button" class="btn cancel-btn" @onclick="PopUpDisplayToggle">Hætta við</button>
                    </div>
                    <DataAnnotationsValidator />
                </EditForm>
            </div>
        </div>
    </div>
}

@if (showDeletePopUp)
{
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"> Staðfesting</h5>
                    <button type="button" class="close" data-dismiss="modal" @onclick="DeletePopUpDisplayToggle">&times;</button>
                </div>
                <div class="modal-body">
                    <p>Ertu viss um að þú viljir eyða flokknum @currentCategory.CategoryName? </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" @onclick="DeleteCategory">Eyða</button>
                    <button type="button" class="btn cancel-btn" @onclick="DeletePopUpDisplayToggle" data-dismiss="modal">Hætta við</button>
                </div>
            </div>
        </div>
    </div>
}


@code {
    [Parameter]
    public EventCallback<Categories> OnEdit { get; set; }
    [Parameter]
    public EventCallback<Categories> OnDelete { get; set; }
    [Parameter]
    public Categories currentCategory { get; set; }
    bool showPopUp = false;
    bool showDeletePopUp = false;

    public void PopUpDisplayToggle()
    {
        showPopUp = !showPopUp;
    }

    public void DeletePopUpDisplayToggle()
    {
        showDeletePopUp = !showDeletePopUp;
    }

    protected async void EditCategory()
    {
        //Categories editedCategory = currentCategory;
        await service.Update(currentCategory);
        PopUpDisplayToggle();
        //Here we are calling a function in the parent component that takes in an instance of the categories class
        //We use this to be able to update the category on the list of categories in the parent component dynamically
        await OnEdit.InvokeAsync(currentCategory);
    }

    protected async void DeleteCategory()
    {
        //Categories editedCategory = currentCategory;
        await service.Delete(currentCategory.CategoryId);
        DeletePopUpDisplayToggle();
        PopUpDisplayToggle();
        //Here we are calling a function in the parent component that takes in an instance of the categories class
        //We use this to be able to update the category on the list of categories in the parent component dynamically
        await OnDelete.InvokeAsync(currentCategory);
    }
}